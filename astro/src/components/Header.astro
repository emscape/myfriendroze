---
// Header component for myfriendroze - Mobile-first responsive design
export interface Props {
  currentPath?: string;
}

const { currentPath = '/' } = Astro.props;

const navigation = [
  { href: '/', label: 'home' },
  { href: '/shop', label: 'shop' },
  { href: '/gallery', label: 'gallery' },
  { href: '/story', label: 'd.d. story' },
  { href: '/contact', label: 'contact us' },
  { href: '/small-print', label: 'the small print' },
];
---

<header class="header">
  <div class="header__content page-width">
    <!-- Mobile hamburger menu (left side) -->
    <button class="header__menu-toggle mobile-only" type="button" aria-expanded="false" aria-controls="mobile-menu">
      <span class="visually-hidden">Menu</span>
      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M3 12h18M3 6h18M3 18h18" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
      </svg>
    </button>

    <!-- Logo -->
    <a href="/" class="header__logo">
      <img src="/mfr-logo.svg" alt="myfriendroze" loading="lazy">
    </a>

    <!-- Desktop Navigation -->
    <nav class="header__nav desktop-only">
      <ul class="header__nav-list">
        {navigation.map((item) => (
          <li>
            <a href={item.href} class={currentPath === item.href ? 'active' : ''}>
              {item.label}
            </a>
          </li>
        ))}
      </ul>
    </nav>

    <!-- Actions -->
    <div class="header__actions">
      <button class="header__search" type="button">
        <span class="visually-hidden">Search</span>
        <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M19 19l-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
      <a href="/cart" class="header__cart">
        <span class="visually-hidden">Cart</span>
        <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5H2M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17M17 13v4a2 2 0 0 1-2 2H9a2 2 0 0 1-2-2v-4.8" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </a>
    </div>
  </div>

  <!-- Mobile Menu -->
  <div class="mobile-menu" id="mobile-menu" hidden>
    <nav class="mobile-menu__nav">
      <ul class="mobile-menu__list">
        {navigation.map((item) => (
          <li>
            <a href={item.href} class={`mobile-menu__link ${currentPath === item.href ? 'mobile-menu__link--active' : ''}`}>
              {item.label}
            </a>
          </li>
        ))}
      </ul>
    </nav>
  </div>
</header>

<style>
  .header {
    background-color: var(--color-background);
    border-bottom: 0.1rem solid rgba(var(--color-foreground), 0.08);
    position: sticky;
    top: 0;
    z-index: 100;
  }

  .header__content {
    display: flex;
    align-items: center;
    padding: 1rem 0;
    min-height: 6rem;
    gap: 1rem;
  }

  /* Mobile hamburger menu */
  .header__menu-toggle {
    background: none;
    border: none;
    color: var(--color-foreground);
    cursor: pointer;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: color 0.2s ease;
    flex-shrink: 0;
  }

  .header__menu-toggle:hover {
    color: var(--color-accent);
  }

  /* Logo positioned after hamburger on mobile */
  .header__logo {
    flex-shrink: 0;
  }

  .header__logo img {
    height: 4rem;
    width: auto;
  }

  /* Desktop navigation */
  .header__nav-list {
    display: flex;
    gap: 2rem;
    list-style: none;
    margin: 0;
    padding: 0;
  }

  .header__nav-list a {
    color: var(--color-foreground);
    text-decoration: none;
    font-size: 1.4rem;
    font-weight: 500;
    padding: 0.5rem 0;
    transition: color 0.2s ease;
  }

  .header__nav-list a:hover,
  .header__nav-list a.active {
    color: var(--color-accent);
  }

  .header__actions {
    display: flex;
    align-items: center;
    gap: 1.5rem;
    margin-left: auto;
    flex-shrink: 0;
  }

  .header__search,
  .header__cart {
    background: none;
    border: none;
    color: var(--color-foreground);
    cursor: pointer;
    padding: 0.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: color 0.2s ease;
  }

  .header__search:hover,
  .header__cart:hover {
    color: var(--color-accent);
  }

  /* Mobile menu */
  .mobile-menu {
    background: var(--color-background);
    border-top: 1px solid rgba(var(--color-foreground), 0.08);
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    z-index: 99;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  .mobile-menu[hidden] {
    display: none;
  }

  .mobile-menu__nav {
    padding: 1rem 0;
  }

  .mobile-menu__list {
    list-style: none;
    margin: 0;
    padding: 0;
  }

  .mobile-menu__link {
    display: block;
    padding: 1.2rem 2rem;
    color: var(--color-foreground);
    text-decoration: none;
    font-size: 1.4rem;
    font-weight: 500;
    transition: background-color 0.2s ease, color 0.2s ease;
  }

  .mobile-menu__link:hover,
  .mobile-menu__link--active {
    background-color: var(--color-background-2);
    color: var(--color-accent);
  }

  /* Responsive utilities */
  .mobile-only {
    display: block;
  }

  .desktop-only {
    display: none;
  }

  .visually-hidden {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  /* Desktop styles */
  @media (min-width: 768px) {
    .mobile-only {
      display: none;
    }

    .desktop-only {
      display: block;
    }

    .header__content {
      gap: 3rem;
    }

    .header__nav {
      flex: 1;
    }

    .header__actions {
      margin-left: 0;
    }
  }
</style>

<script>
  // Mobile menu functionality
  const menuToggle = document.querySelector('.header__menu-toggle');
  const mobileMenu = document.querySelector('.mobile-menu');

  if (menuToggle && mobileMenu) {
    menuToggle.addEventListener('click', () => {
      const isExpanded = menuToggle.getAttribute('aria-expanded') === 'true';

      menuToggle.setAttribute('aria-expanded', (!isExpanded).toString());

      if (isExpanded) {
        mobileMenu.setAttribute('hidden', '');
      } else {
        mobileMenu.removeAttribute('hidden');
      }
    });

    // Close mobile menu when clicking on a link
    const mobileLinks = mobileMenu.querySelectorAll('.mobile-menu__link');
    mobileLinks.forEach(link => {
      link.addEventListener('click', () => {
        mobileMenu.setAttribute('hidden', '');
        menuToggle.setAttribute('aria-expanded', 'false');
      });
    });
  }

  // Search functionality
  const searchButton = document.querySelector('.header__search');
  if (searchButton) {
    searchButton.addEventListener('click', () => {
      // Search functionality to be implemented
      console.log('Search clicked');
    });
  }
</script>
